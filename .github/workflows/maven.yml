# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        include:
          - jvm: 11
            platform: ubuntu-22.04
            architecture: x64
          - jvm: 17
            platform: ubuntu-22.04
            architecture: x64
          - jvm: 21
            platform: ubuntu-22.04
            architecture: x64
          - jvm: 11
            platform: macos-14
            architecture: x64
          - jvm: 11
            platform: macos-14
            architecture: aarch64
          - jvm: 11
            platform: windows-2022
            architecture: x64
          - jvm: 17
            platform: windows-2022
            architecture: x64
          - jvm: 21
            platform: windows-2022
            architecture: x64
    steps:
    - name: install libomp
      run: brew install libomp
      if: runner.os == 'macOS'

    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Checkout LFS objects
      run: git lfs checkout

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.jvm }}
        architecture: ${{ matrix.architecture }}
        distribution: 'temurin'

    - name: Cache maven packages
      uses: actions/cache@v4
      env:
        cache-name: cache-mvn2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: check linking consistency on mac
      run: otool -L src/main/resources/lightgbm4j/osx/x86_64/lib_lightgbm.dylib
      if: runner.os == 'macOS'

    - name: Build with Maven
      run: mvn -B compile --file pom.xml

    - name: Run tests
      run: mvn -B test --file pom.xml
