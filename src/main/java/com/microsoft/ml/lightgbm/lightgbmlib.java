/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.microsoft.ml.lightgbm;

public class lightgbmlib implements lightgbmlibConstants {
  public static String LGBM_GetLastError() {
    return lightgbmlibJNI.LGBM_GetLastError();
  }

  public static int LGBM_RegisterLogCallback(SWIGTYPE_p_f_p_q_const__char__void callback) {
    return lightgbmlibJNI.LGBM_RegisterLogCallback(SWIGTYPE_p_f_p_q_const__char__void.getCPtr(callback));
  }

  public static int LGBM_DatasetCreateFromFile(String filename, String parameters, SWIGTYPE_p_void reference, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_DatasetCreateFromFile(filename, parameters, SWIGTYPE_p_void.getCPtr(reference), SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static int LGBM_DatasetCreateFromSampledColumn(SWIGTYPE_p_p_double sample_data, SWIGTYPE_p_p_int sample_indices, int ncol, SWIGTYPE_p_int num_per_col, int num_sample_row, int num_total_row, String parameters, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_DatasetCreateFromSampledColumn(SWIGTYPE_p_p_double.getCPtr(sample_data), SWIGTYPE_p_p_int.getCPtr(sample_indices), ncol, SWIGTYPE_p_int.getCPtr(num_per_col), num_sample_row, num_total_row, parameters, SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static int LGBM_DatasetCreateByReference(SWIGTYPE_p_void reference, long num_total_row, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_DatasetCreateByReference(SWIGTYPE_p_void.getCPtr(reference), num_total_row, SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static int LGBM_DatasetPushRows(SWIGTYPE_p_void dataset, SWIGTYPE_p_void data, int data_type, int nrow, int ncol, int start_row) {
    return lightgbmlibJNI.LGBM_DatasetPushRows(SWIGTYPE_p_void.getCPtr(dataset), SWIGTYPE_p_void.getCPtr(data), data_type, nrow, ncol, start_row);
  }

  public static int LGBM_DatasetPushRowsByCSR(SWIGTYPE_p_void dataset, SWIGTYPE_p_void indptr, int indptr_type, SWIGTYPE_p_int indices, SWIGTYPE_p_void data, int data_type, long nindptr, long nelem, long num_col, long start_row) {
    return lightgbmlibJNI.LGBM_DatasetPushRowsByCSR(SWIGTYPE_p_void.getCPtr(dataset), SWIGTYPE_p_void.getCPtr(indptr), indptr_type, SWIGTYPE_p_int.getCPtr(indices), SWIGTYPE_p_void.getCPtr(data), data_type, nindptr, nelem, num_col, start_row);
  }

  public static int LGBM_DatasetCreateFromCSR(SWIGTYPE_p_void indptr, int indptr_type, SWIGTYPE_p_int indices, SWIGTYPE_p_void data, int data_type, long nindptr, long nelem, long num_col, String parameters, SWIGTYPE_p_void reference, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_DatasetCreateFromCSR(SWIGTYPE_p_void.getCPtr(indptr), indptr_type, SWIGTYPE_p_int.getCPtr(indices), SWIGTYPE_p_void.getCPtr(data), data_type, nindptr, nelem, num_col, parameters, SWIGTYPE_p_void.getCPtr(reference), SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static int LGBM_DatasetCreateFromCSRFunc(SWIGTYPE_p_void get_row_funptr, int num_rows, long num_col, String parameters, SWIGTYPE_p_void reference, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_DatasetCreateFromCSRFunc(SWIGTYPE_p_void.getCPtr(get_row_funptr), num_rows, num_col, parameters, SWIGTYPE_p_void.getCPtr(reference), SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static int LGBM_DatasetCreateFromCSC(SWIGTYPE_p_void col_ptr, int col_ptr_type, SWIGTYPE_p_int indices, SWIGTYPE_p_void data, int data_type, long ncol_ptr, long nelem, long num_row, String parameters, SWIGTYPE_p_void reference, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_DatasetCreateFromCSC(SWIGTYPE_p_void.getCPtr(col_ptr), col_ptr_type, SWIGTYPE_p_int.getCPtr(indices), SWIGTYPE_p_void.getCPtr(data), data_type, ncol_ptr, nelem, num_row, parameters, SWIGTYPE_p_void.getCPtr(reference), SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static int LGBM_DatasetCreateFromMat(SWIGTYPE_p_void data, int data_type, int nrow, int ncol, int is_row_major, String parameters, SWIGTYPE_p_void reference, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_DatasetCreateFromMat(SWIGTYPE_p_void.getCPtr(data), data_type, nrow, ncol, is_row_major, parameters, SWIGTYPE_p_void.getCPtr(reference), SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static int LGBM_DatasetCreateFromMats(int nmat, SWIGTYPE_p_p_void data, int data_type, SWIGTYPE_p_int nrow, int ncol, int is_row_major, String parameters, SWIGTYPE_p_void reference, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_DatasetCreateFromMats(nmat, SWIGTYPE_p_p_void.getCPtr(data), data_type, SWIGTYPE_p_int.getCPtr(nrow), ncol, is_row_major, parameters, SWIGTYPE_p_void.getCPtr(reference), SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static int LGBM_DatasetGetSubset(SWIGTYPE_p_void handle, SWIGTYPE_p_int used_row_indices, int num_used_row_indices, String parameters, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_DatasetGetSubset(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_int.getCPtr(used_row_indices), num_used_row_indices, parameters, SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static int LGBM_DatasetSetFeatureNames(SWIGTYPE_p_void handle, String[] feature_names, int num_feature_names) {
    return lightgbmlibJNI.LGBM_DatasetSetFeatureNames(SWIGTYPE_p_void.getCPtr(handle), feature_names, num_feature_names);
  }

  public static int LGBM_DatasetGetFeatureNames(SWIGTYPE_p_void handle, int len, SWIGTYPE_p_int num_feature_names, long buffer_len, SWIGTYPE_p_size_t out_buffer_len, String[] feature_names) {
    return lightgbmlibJNI.LGBM_DatasetGetFeatureNames(SWIGTYPE_p_void.getCPtr(handle), len, SWIGTYPE_p_int.getCPtr(num_feature_names), buffer_len, SWIGTYPE_p_size_t.getCPtr(out_buffer_len), feature_names);
  }

  public static int LGBM_DatasetFree(SWIGTYPE_p_void handle) {
    return lightgbmlibJNI.LGBM_DatasetFree(SWIGTYPE_p_void.getCPtr(handle));
  }

  public static int LGBM_DatasetSaveBinary(SWIGTYPE_p_void handle, String filename) {
    return lightgbmlibJNI.LGBM_DatasetSaveBinary(SWIGTYPE_p_void.getCPtr(handle), filename);
  }

  public static int LGBM_DatasetDumpText(SWIGTYPE_p_void handle, String filename) {
    return lightgbmlibJNI.LGBM_DatasetDumpText(SWIGTYPE_p_void.getCPtr(handle), filename);
  }

  public static int LGBM_DatasetSetField(SWIGTYPE_p_void handle, String field_name, SWIGTYPE_p_void field_data, int num_element, int type) {
    return lightgbmlibJNI.LGBM_DatasetSetField(SWIGTYPE_p_void.getCPtr(handle), field_name, SWIGTYPE_p_void.getCPtr(field_data), num_element, type);
  }

  public static int LGBM_DatasetGetField(SWIGTYPE_p_void handle, String field_name, SWIGTYPE_p_int out_len, SWIGTYPE_p_p_void out_ptr, SWIGTYPE_p_int out_type) {
    return lightgbmlibJNI.LGBM_DatasetGetField(SWIGTYPE_p_void.getCPtr(handle), field_name, SWIGTYPE_p_int.getCPtr(out_len), SWIGTYPE_p_p_void.getCPtr(out_ptr), SWIGTYPE_p_int.getCPtr(out_type));
  }

  public static int LGBM_DatasetUpdateParamChecking(String old_parameters, String new_parameters) {
    return lightgbmlibJNI.LGBM_DatasetUpdateParamChecking(old_parameters, new_parameters);
  }

  public static int LGBM_DatasetGetNumData(SWIGTYPE_p_void handle, SWIGTYPE_p_int out) {
    return lightgbmlibJNI.LGBM_DatasetGetNumData(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_int.getCPtr(out));
  }

  public static int LGBM_DatasetGetNumFeature(SWIGTYPE_p_void handle, SWIGTYPE_p_int out) {
    return lightgbmlibJNI.LGBM_DatasetGetNumFeature(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_int.getCPtr(out));
  }

  public static int LGBM_DatasetAddFeaturesFrom(SWIGTYPE_p_void target, SWIGTYPE_p_void source) {
    return lightgbmlibJNI.LGBM_DatasetAddFeaturesFrom(SWIGTYPE_p_void.getCPtr(target), SWIGTYPE_p_void.getCPtr(source));
  }

  public static int LGBM_BoosterCreate(SWIGTYPE_p_void train_data, String parameters, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_BoosterCreate(SWIGTYPE_p_void.getCPtr(train_data), parameters, SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static int LGBM_BoosterCreateFromModelfile(String filename, SWIGTYPE_p_int out_num_iterations, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_BoosterCreateFromModelfile(filename, SWIGTYPE_p_int.getCPtr(out_num_iterations), SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static int LGBM_BoosterLoadModelFromString(String model_str, SWIGTYPE_p_int out_num_iterations, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_BoosterLoadModelFromString(model_str, SWIGTYPE_p_int.getCPtr(out_num_iterations), SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static int LGBM_BoosterFree(SWIGTYPE_p_void handle) {
    return lightgbmlibJNI.LGBM_BoosterFree(SWIGTYPE_p_void.getCPtr(handle));
  }

  public static int LGBM_BoosterShuffleModels(SWIGTYPE_p_void handle, int start_iter, int end_iter) {
    return lightgbmlibJNI.LGBM_BoosterShuffleModels(SWIGTYPE_p_void.getCPtr(handle), start_iter, end_iter);
  }

  public static int LGBM_BoosterMerge(SWIGTYPE_p_void handle, SWIGTYPE_p_void other_handle) {
    return lightgbmlibJNI.LGBM_BoosterMerge(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_void.getCPtr(other_handle));
  }

  public static int LGBM_BoosterAddValidData(SWIGTYPE_p_void handle, SWIGTYPE_p_void valid_data) {
    return lightgbmlibJNI.LGBM_BoosterAddValidData(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_void.getCPtr(valid_data));
  }

  public static int LGBM_BoosterResetTrainingData(SWIGTYPE_p_void handle, SWIGTYPE_p_void train_data) {
    return lightgbmlibJNI.LGBM_BoosterResetTrainingData(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_void.getCPtr(train_data));
  }

  public static int LGBM_BoosterResetParameter(SWIGTYPE_p_void handle, String parameters) {
    return lightgbmlibJNI.LGBM_BoosterResetParameter(SWIGTYPE_p_void.getCPtr(handle), parameters);
  }

  public static int LGBM_BoosterGetNumClasses(SWIGTYPE_p_void handle, SWIGTYPE_p_int out_len) {
    return lightgbmlibJNI.LGBM_BoosterGetNumClasses(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_int.getCPtr(out_len));
  }

  public static int LGBM_BoosterUpdateOneIter(SWIGTYPE_p_void handle, SWIGTYPE_p_int is_finished) {
    return lightgbmlibJNI.LGBM_BoosterUpdateOneIter(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_int.getCPtr(is_finished));
  }

  public static int LGBM_BoosterRefit(SWIGTYPE_p_void handle, SWIGTYPE_p_int leaf_preds, int nrow, int ncol) {
    return lightgbmlibJNI.LGBM_BoosterRefit(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_int.getCPtr(leaf_preds), nrow, ncol);
  }

  public static int LGBM_BoosterUpdateOneIterCustom(SWIGTYPE_p_void handle, SWIGTYPE_p_float grad, SWIGTYPE_p_float hess, SWIGTYPE_p_int is_finished) {
    return lightgbmlibJNI.LGBM_BoosterUpdateOneIterCustom(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_float.getCPtr(grad), SWIGTYPE_p_float.getCPtr(hess), SWIGTYPE_p_int.getCPtr(is_finished));
  }

  public static int LGBM_BoosterRollbackOneIter(SWIGTYPE_p_void handle) {
    return lightgbmlibJNI.LGBM_BoosterRollbackOneIter(SWIGTYPE_p_void.getCPtr(handle));
  }

  public static int LGBM_BoosterGetCurrentIteration(SWIGTYPE_p_void handle, SWIGTYPE_p_int out_iteration) {
    return lightgbmlibJNI.LGBM_BoosterGetCurrentIteration(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_int.getCPtr(out_iteration));
  }

  public static int LGBM_BoosterNumModelPerIteration(SWIGTYPE_p_void handle, SWIGTYPE_p_int out_tree_per_iteration) {
    return lightgbmlibJNI.LGBM_BoosterNumModelPerIteration(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_int.getCPtr(out_tree_per_iteration));
  }

  public static int LGBM_BoosterNumberOfTotalModel(SWIGTYPE_p_void handle, SWIGTYPE_p_int out_models) {
    return lightgbmlibJNI.LGBM_BoosterNumberOfTotalModel(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_int.getCPtr(out_models));
  }

  public static int LGBM_BoosterGetEvalCounts(SWIGTYPE_p_void handle, SWIGTYPE_p_int out_len) {
    return lightgbmlibJNI.LGBM_BoosterGetEvalCounts(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_int.getCPtr(out_len));
  }

  public static int LGBM_BoosterGetNumFeature(SWIGTYPE_p_void handle, SWIGTYPE_p_int out_len) {
    return lightgbmlibJNI.LGBM_BoosterGetNumFeature(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_int.getCPtr(out_len));
  }

  public static int LGBM_BoosterGetEval(SWIGTYPE_p_void handle, int data_idx, SWIGTYPE_p_int out_len, SWIGTYPE_p_double out_results) {
    return lightgbmlibJNI.LGBM_BoosterGetEval(SWIGTYPE_p_void.getCPtr(handle), data_idx, SWIGTYPE_p_int.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_results));
  }

  public static int LGBM_BoosterGetNumPredict(SWIGTYPE_p_void handle, int data_idx, SWIGTYPE_p_long_long out_len) {
    return lightgbmlibJNI.LGBM_BoosterGetNumPredict(SWIGTYPE_p_void.getCPtr(handle), data_idx, SWIGTYPE_p_long_long.getCPtr(out_len));
  }

  public static int LGBM_BoosterGetPredict(SWIGTYPE_p_void handle, int data_idx, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterGetPredict(SWIGTYPE_p_void.getCPtr(handle), data_idx, SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_BoosterPredictForFile(SWIGTYPE_p_void handle, String data_filename, int data_has_header, int predict_type, int start_iteration, int num_iteration, String parameter, String result_filename) {
    return lightgbmlibJNI.LGBM_BoosterPredictForFile(SWIGTYPE_p_void.getCPtr(handle), data_filename, data_has_header, predict_type, start_iteration, num_iteration, parameter, result_filename);
  }

  public static int LGBM_BoosterCalcNumPredict(SWIGTYPE_p_void handle, int num_row, int predict_type, int start_iteration, int num_iteration, SWIGTYPE_p_long_long out_len) {
    return lightgbmlibJNI.LGBM_BoosterCalcNumPredict(SWIGTYPE_p_void.getCPtr(handle), num_row, predict_type, start_iteration, num_iteration, SWIGTYPE_p_long_long.getCPtr(out_len));
  }

  public static int LGBM_FastConfigFree(SWIGTYPE_p_void fastConfig) {
    return lightgbmlibJNI.LGBM_FastConfigFree(SWIGTYPE_p_void.getCPtr(fastConfig));
  }

  public static int LGBM_BoosterPredictForCSR(SWIGTYPE_p_void handle, SWIGTYPE_p_void indptr, int indptr_type, SWIGTYPE_p_int indices, SWIGTYPE_p_void data, int data_type, long nindptr, long nelem, long num_col, int predict_type, int start_iteration, int num_iteration, String parameter, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterPredictForCSR(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_void.getCPtr(indptr), indptr_type, SWIGTYPE_p_int.getCPtr(indices), SWIGTYPE_p_void.getCPtr(data), data_type, nindptr, nelem, num_col, predict_type, start_iteration, num_iteration, parameter, SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_BoosterPredictSparseOutput(SWIGTYPE_p_void handle, SWIGTYPE_p_void indptr, int indptr_type, SWIGTYPE_p_int indices, SWIGTYPE_p_void data, int data_type, long nindptr, long nelem, long num_col_or_row, int predict_type, int start_iteration, int num_iteration, String parameter, int matrix_type, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_p_void out_indptr, SWIGTYPE_p_p_int out_indices, SWIGTYPE_p_p_void out_data) {
    return lightgbmlibJNI.LGBM_BoosterPredictSparseOutput(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_void.getCPtr(indptr), indptr_type, SWIGTYPE_p_int.getCPtr(indices), SWIGTYPE_p_void.getCPtr(data), data_type, nindptr, nelem, num_col_or_row, predict_type, start_iteration, num_iteration, parameter, matrix_type, SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_p_void.getCPtr(out_indptr), SWIGTYPE_p_p_int.getCPtr(out_indices), SWIGTYPE_p_p_void.getCPtr(out_data));
  }

  public static int LGBM_BoosterFreePredictSparse(SWIGTYPE_p_void indptr, SWIGTYPE_p_int indices, SWIGTYPE_p_void data, int indptr_type, int data_type) {
    return lightgbmlibJNI.LGBM_BoosterFreePredictSparse(SWIGTYPE_p_void.getCPtr(indptr), SWIGTYPE_p_int.getCPtr(indices), SWIGTYPE_p_void.getCPtr(data), indptr_type, data_type);
  }

  public static int LGBM_BoosterPredictForCSRSingleRow(SWIGTYPE_p_void handle, SWIGTYPE_p_void indptr, int indptr_type, SWIGTYPE_p_int indices, SWIGTYPE_p_void data, int data_type, long nindptr, long nelem, long num_col, int predict_type, int start_iteration, int num_iteration, String parameter, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterPredictForCSRSingleRow(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_void.getCPtr(indptr), indptr_type, SWIGTYPE_p_int.getCPtr(indices), SWIGTYPE_p_void.getCPtr(data), data_type, nindptr, nelem, num_col, predict_type, start_iteration, num_iteration, parameter, SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_BoosterPredictForCSRSingleRowFastInit(SWIGTYPE_p_void handle, int predict_type, int start_iteration, int num_iteration, int data_type, long num_col, String parameter, SWIGTYPE_p_p_void out_fastConfig) {
    return lightgbmlibJNI.LGBM_BoosterPredictForCSRSingleRowFastInit(SWIGTYPE_p_void.getCPtr(handle), predict_type, start_iteration, num_iteration, data_type, num_col, parameter, SWIGTYPE_p_p_void.getCPtr(out_fastConfig));
  }

  public static int LGBM_BoosterPredictForCSRSingleRowFast(SWIGTYPE_p_void fastConfig_handle, SWIGTYPE_p_void indptr, int indptr_type, SWIGTYPE_p_int indices, SWIGTYPE_p_void data, long nindptr, long nelem, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterPredictForCSRSingleRowFast(SWIGTYPE_p_void.getCPtr(fastConfig_handle), SWIGTYPE_p_void.getCPtr(indptr), indptr_type, SWIGTYPE_p_int.getCPtr(indices), SWIGTYPE_p_void.getCPtr(data), nindptr, nelem, SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_BoosterPredictForCSC(SWIGTYPE_p_void handle, SWIGTYPE_p_void col_ptr, int col_ptr_type, SWIGTYPE_p_int indices, SWIGTYPE_p_void data, int data_type, long ncol_ptr, long nelem, long num_row, int predict_type, int start_iteration, int num_iteration, String parameter, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterPredictForCSC(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_void.getCPtr(col_ptr), col_ptr_type, SWIGTYPE_p_int.getCPtr(indices), SWIGTYPE_p_void.getCPtr(data), data_type, ncol_ptr, nelem, num_row, predict_type, start_iteration, num_iteration, parameter, SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_BoosterPredictForMat(SWIGTYPE_p_void handle, SWIGTYPE_p_void data, int data_type, int nrow, int ncol, int is_row_major, int predict_type, int start_iteration, int num_iteration, String parameter, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterPredictForMat(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_void.getCPtr(data), data_type, nrow, ncol, is_row_major, predict_type, start_iteration, num_iteration, parameter, SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_BoosterPredictForMatSingleRow(SWIGTYPE_p_void handle, SWIGTYPE_p_void data, int data_type, int ncol, int is_row_major, int predict_type, int start_iteration, int num_iteration, String parameter, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterPredictForMatSingleRow(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_void.getCPtr(data), data_type, ncol, is_row_major, predict_type, start_iteration, num_iteration, parameter, SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_BoosterPredictForMatSingleRowFastInit(SWIGTYPE_p_void handle, int predict_type, int start_iteration, int num_iteration, int data_type, int ncol, String parameter, SWIGTYPE_p_p_void out_fastConfig) {
    return lightgbmlibJNI.LGBM_BoosterPredictForMatSingleRowFastInit(SWIGTYPE_p_void.getCPtr(handle), predict_type, start_iteration, num_iteration, data_type, ncol, parameter, SWIGTYPE_p_p_void.getCPtr(out_fastConfig));
  }

  public static int LGBM_BoosterPredictForMatSingleRowFast(SWIGTYPE_p_void fastConfig_handle, SWIGTYPE_p_void data, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterPredictForMatSingleRowFast(SWIGTYPE_p_void.getCPtr(fastConfig_handle), SWIGTYPE_p_void.getCPtr(data), SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_BoosterPredictForMats(SWIGTYPE_p_void handle, SWIGTYPE_p_p_void data, int data_type, int nrow, int ncol, int predict_type, int start_iteration, int num_iteration, String parameter, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterPredictForMats(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_p_void.getCPtr(data), data_type, nrow, ncol, predict_type, start_iteration, num_iteration, parameter, SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_BoosterSaveModel(SWIGTYPE_p_void handle, int start_iteration, int num_iteration, int feature_importance_type, String filename) {
    return lightgbmlibJNI.LGBM_BoosterSaveModel(SWIGTYPE_p_void.getCPtr(handle), start_iteration, num_iteration, feature_importance_type, filename);
  }

  public static int LGBM_BoosterDumpModel(SWIGTYPE_p_void handle, int start_iteration, int num_iteration, int feature_importance_type, long buffer_len, SWIGTYPE_p_long_long out_len, String out_str) {
    return lightgbmlibJNI.LGBM_BoosterDumpModel(SWIGTYPE_p_void.getCPtr(handle), start_iteration, num_iteration, feature_importance_type, buffer_len, SWIGTYPE_p_long_long.getCPtr(out_len), out_str);
  }

  public static int LGBM_BoosterGetLeafValue(SWIGTYPE_p_void handle, int tree_idx, int leaf_idx, SWIGTYPE_p_double out_val) {
    return lightgbmlibJNI.LGBM_BoosterGetLeafValue(SWIGTYPE_p_void.getCPtr(handle), tree_idx, leaf_idx, SWIGTYPE_p_double.getCPtr(out_val));
  }

  public static int LGBM_BoosterSetLeafValue(SWIGTYPE_p_void handle, int tree_idx, int leaf_idx, double val) {
    return lightgbmlibJNI.LGBM_BoosterSetLeafValue(SWIGTYPE_p_void.getCPtr(handle), tree_idx, leaf_idx, val);
  }

  public static int LGBM_BoosterFeatureImportance(SWIGTYPE_p_void handle, int num_iteration, int importance_type, SWIGTYPE_p_double out_results) {
    return lightgbmlibJNI.LGBM_BoosterFeatureImportance(SWIGTYPE_p_void.getCPtr(handle), num_iteration, importance_type, SWIGTYPE_p_double.getCPtr(out_results));
  }

  public static int LGBM_BoosterGetUpperBoundValue(SWIGTYPE_p_void handle, SWIGTYPE_p_double out_results) {
    return lightgbmlibJNI.LGBM_BoosterGetUpperBoundValue(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_double.getCPtr(out_results));
  }

  public static int LGBM_BoosterGetLowerBoundValue(SWIGTYPE_p_void handle, SWIGTYPE_p_double out_results) {
    return lightgbmlibJNI.LGBM_BoosterGetLowerBoundValue(SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_double.getCPtr(out_results));
  }

  public static int LGBM_NetworkInit(String machines, int local_listen_port, int listen_time_out, int num_machines) {
    return lightgbmlibJNI.LGBM_NetworkInit(machines, local_listen_port, listen_time_out, num_machines);
  }

  public static int LGBM_NetworkFree() {
    return lightgbmlibJNI.LGBM_NetworkFree();
  }

  public static int LGBM_NetworkInitWithFunctions(int num_machines, int rank, SWIGTYPE_p_void reduce_scatter_ext_fun, SWIGTYPE_p_void allgather_ext_fun) {
    return lightgbmlibJNI.LGBM_NetworkInitWithFunctions(num_machines, rank, SWIGTYPE_p_void.getCPtr(reduce_scatter_ext_fun), SWIGTYPE_p_void.getCPtr(allgather_ext_fun));
  }

  public static String LastErrorMsg() {
    return lightgbmlibJNI.LastErrorMsg();
  }

  public static void LGBM_SetLastError(String msg) {
    lightgbmlibJNI.LGBM_SetLastError(msg);
  }

  public static String LGBM_BoosterSaveModelToStringSWIG(SWIGTYPE_p_void handle, int start_iteration, int num_iteration, int feature_importance_type, long buffer_len, SWIGTYPE_p_long_long out_len) {
    return lightgbmlibJNI.LGBM_BoosterSaveModelToStringSWIG(SWIGTYPE_p_void.getCPtr(handle), start_iteration, num_iteration, feature_importance_type, buffer_len, SWIGTYPE_p_long_long.getCPtr(out_len));
  }

  public static String LGBM_BoosterDumpModelSWIG(SWIGTYPE_p_void handle, int start_iteration, int num_iteration, int feature_importance_type, long buffer_len, SWIGTYPE_p_long_long out_len) {
    return lightgbmlibJNI.LGBM_BoosterDumpModelSWIG(SWIGTYPE_p_void.getCPtr(handle), start_iteration, num_iteration, feature_importance_type, buffer_len, SWIGTYPE_p_long_long.getCPtr(out_len));
  }

  public static int LGBM_BoosterPredictForMatSingle(double[] data, SWIGTYPE_p_void handle, int data_type, int ncol, int is_row_major, int predict_type, int start_iteration, int num_iteration, String parameter, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterPredictForMatSingle(data, SWIGTYPE_p_void.getCPtr(handle), data_type, ncol, is_row_major, predict_type, start_iteration, num_iteration, parameter, SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_BoosterPredictForMatSingleRowFastCriticalSWIG(double[] data, SWIGTYPE_p_void handle, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterPredictForMatSingleRowFastCriticalSWIG(data, SWIGTYPE_p_void.getCPtr(handle), SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_BoosterPredictForCSRSingle(int[] indices, double[] values, int numNonZeros, SWIGTYPE_p_void handle, int indptr_type, int data_type, long nelem, long num_col, int predict_type, int start_iteration, int num_iteration, String parameter, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterPredictForCSRSingle(indices, values, numNonZeros, SWIGTYPE_p_void.getCPtr(handle), indptr_type, data_type, nelem, num_col, predict_type, start_iteration, num_iteration, parameter, SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_BoosterPredictForCSRSingleRowFastCriticalSWIG(int[] indices, double[] values, int numNonZeros, SWIGTYPE_p_void handle, int indptr_type, long nelem, SWIGTYPE_p_long_long out_len, SWIGTYPE_p_double out_result) {
    return lightgbmlibJNI.LGBM_BoosterPredictForCSRSingleRowFastCriticalSWIG(indices, values, numNonZeros, SWIGTYPE_p_void.getCPtr(handle), indptr_type, nelem, SWIGTYPE_p_long_long.getCPtr(out_len), SWIGTYPE_p_double.getCPtr(out_result));
  }

  public static int LGBM_DatasetCreateFromCSRSpark(java.lang.Object[] arrayOfSparseVector, int num_rows, long num_col, String parameters, SWIGTYPE_p_void reference, SWIGTYPE_p_p_void out) {
    return lightgbmlibJNI.LGBM_DatasetCreateFromCSRSpark(arrayOfSparseVector, num_rows, num_col, parameters, SWIGTYPE_p_void.getCPtr(reference), SWIGTYPE_p_p_void.getCPtr(out));
  }

  public static SWIGTYPE_p_int new_intp() {
    long cPtr = lightgbmlibJNI.new_intp();
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static SWIGTYPE_p_int copy_intp(int value) {
    long cPtr = lightgbmlibJNI.copy_intp(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static void delete_intp(SWIGTYPE_p_int obj) {
    lightgbmlibJNI.delete_intp(SWIGTYPE_p_int.getCPtr(obj));
  }

  public static void intp_assign(SWIGTYPE_p_int obj, int value) {
    lightgbmlibJNI.intp_assign(SWIGTYPE_p_int.getCPtr(obj), value);
  }

  public static int intp_value(SWIGTYPE_p_int obj) {
    return lightgbmlibJNI.intp_value(SWIGTYPE_p_int.getCPtr(obj));
  }

  public static SWIGTYPE_p_long new_longp() {
    long cPtr = lightgbmlibJNI.new_longp();
    return (cPtr == 0) ? null : new SWIGTYPE_p_long(cPtr, false);
  }

  public static SWIGTYPE_p_long copy_longp(int value) {
    long cPtr = lightgbmlibJNI.copy_longp(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_long(cPtr, false);
  }

  public static void delete_longp(SWIGTYPE_p_long obj) {
    lightgbmlibJNI.delete_longp(SWIGTYPE_p_long.getCPtr(obj));
  }

  public static void longp_assign(SWIGTYPE_p_long obj, int value) {
    lightgbmlibJNI.longp_assign(SWIGTYPE_p_long.getCPtr(obj), value);
  }

  public static int longp_value(SWIGTYPE_p_long obj) {
    return lightgbmlibJNI.longp_value(SWIGTYPE_p_long.getCPtr(obj));
  }

  public static SWIGTYPE_p_double new_doublep() {
    long cPtr = lightgbmlibJNI.new_doublep();
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  public static SWIGTYPE_p_double copy_doublep(double value) {
    long cPtr = lightgbmlibJNI.copy_doublep(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  public static void delete_doublep(SWIGTYPE_p_double obj) {
    lightgbmlibJNI.delete_doublep(SWIGTYPE_p_double.getCPtr(obj));
  }

  public static void doublep_assign(SWIGTYPE_p_double obj, double value) {
    lightgbmlibJNI.doublep_assign(SWIGTYPE_p_double.getCPtr(obj), value);
  }

  public static double doublep_value(SWIGTYPE_p_double obj) {
    return lightgbmlibJNI.doublep_value(SWIGTYPE_p_double.getCPtr(obj));
  }

  public static SWIGTYPE_p_float new_floatp() {
    long cPtr = lightgbmlibJNI.new_floatp();
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static SWIGTYPE_p_float copy_floatp(float value) {
    long cPtr = lightgbmlibJNI.copy_floatp(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static void delete_floatp(SWIGTYPE_p_float obj) {
    lightgbmlibJNI.delete_floatp(SWIGTYPE_p_float.getCPtr(obj));
  }

  public static void floatp_assign(SWIGTYPE_p_float obj, float value) {
    lightgbmlibJNI.floatp_assign(SWIGTYPE_p_float.getCPtr(obj), value);
  }

  public static float floatp_value(SWIGTYPE_p_float obj) {
    return lightgbmlibJNI.floatp_value(SWIGTYPE_p_float.getCPtr(obj));
  }

  public static SWIGTYPE_p_long_long new_int64_tp() {
    long cPtr = lightgbmlibJNI.new_int64_tp();
    return (cPtr == 0) ? null : new SWIGTYPE_p_long_long(cPtr, false);
  }

  public static SWIGTYPE_p_long_long copy_int64_tp(long value) {
    long cPtr = lightgbmlibJNI.copy_int64_tp(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_long_long(cPtr, false);
  }

  public static void delete_int64_tp(SWIGTYPE_p_long_long obj) {
    lightgbmlibJNI.delete_int64_tp(SWIGTYPE_p_long_long.getCPtr(obj));
  }

  public static void int64_tp_assign(SWIGTYPE_p_long_long obj, long value) {
    lightgbmlibJNI.int64_tp_assign(SWIGTYPE_p_long_long.getCPtr(obj), value);
  }

  public static long int64_tp_value(SWIGTYPE_p_long_long obj) {
    return lightgbmlibJNI.int64_tp_value(SWIGTYPE_p_long_long.getCPtr(obj));
  }

  public static SWIGTYPE_p_int new_int32_tp() {
    long cPtr = lightgbmlibJNI.new_int32_tp();
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static SWIGTYPE_p_int copy_int32_tp(int value) {
    long cPtr = lightgbmlibJNI.copy_int32_tp(value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static void delete_int32_tp(SWIGTYPE_p_int obj) {
    lightgbmlibJNI.delete_int32_tp(SWIGTYPE_p_int.getCPtr(obj));
  }

  public static void int32_tp_assign(SWIGTYPE_p_int obj, int value) {
    lightgbmlibJNI.int32_tp_assign(SWIGTYPE_p_int.getCPtr(obj), value);
  }

  public static int int32_tp_value(SWIGTYPE_p_int obj) {
    return lightgbmlibJNI.int32_tp_value(SWIGTYPE_p_int.getCPtr(obj));
  }

  public static SWIGTYPE_p_long int64_t_to_long_ptr(SWIGTYPE_p_long_long x) {
    long cPtr = lightgbmlibJNI.int64_t_to_long_ptr(SWIGTYPE_p_long_long.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_long(cPtr, false);
  }

  public static SWIGTYPE_p_double int64_t_to_double_ptr(SWIGTYPE_p_long_long x) {
    long cPtr = lightgbmlibJNI.int64_t_to_double_ptr(SWIGTYPE_p_long_long.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  public static SWIGTYPE_p_int int32_t_to_int_ptr(SWIGTYPE_p_int x) {
    long cPtr = lightgbmlibJNI.int32_t_to_int_ptr(SWIGTYPE_p_int.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static SWIGTYPE_p_long_long long_to_int64_t_ptr(SWIGTYPE_p_long x) {
    long cPtr = lightgbmlibJNI.long_to_int64_t_ptr(SWIGTYPE_p_long.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_long_long(cPtr, false);
  }

  public static SWIGTYPE_p_long_long double_to_int64_t_ptr(SWIGTYPE_p_double x) {
    long cPtr = lightgbmlibJNI.double_to_int64_t_ptr(SWIGTYPE_p_double.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_long_long(cPtr, false);
  }

  public static SWIGTYPE_p_int int_to_int32_t_ptr(SWIGTYPE_p_int x) {
    long cPtr = lightgbmlibJNI.int_to_int32_t_ptr(SWIGTYPE_p_int.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static SWIGTYPE_p_void double_to_voidp_ptr(SWIGTYPE_p_double x) {
    long cPtr = lightgbmlibJNI.double_to_voidp_ptr(SWIGTYPE_p_double.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void float_to_voidp_ptr(SWIGTYPE_p_float x) {
    long cPtr = lightgbmlibJNI.float_to_voidp_ptr(SWIGTYPE_p_float.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void int_to_voidp_ptr(SWIGTYPE_p_int x) {
    long cPtr = lightgbmlibJNI.int_to_voidp_ptr(SWIGTYPE_p_int.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void int32_t_to_voidp_ptr(SWIGTYPE_p_int x) {
    long cPtr = lightgbmlibJNI.int32_t_to_voidp_ptr(SWIGTYPE_p_int.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void int64_t_to_voidp_ptr(SWIGTYPE_p_long_long x) {
    long cPtr = lightgbmlibJNI.int64_t_to_voidp_ptr(SWIGTYPE_p_long_long.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_double new_doubleArray(long nelements) {
    long cPtr = lightgbmlibJNI.new_doubleArray(nelements);
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  public static void delete_doubleArray(SWIGTYPE_p_double ary) {
    lightgbmlibJNI.delete_doubleArray(SWIGTYPE_p_double.getCPtr(ary));
  }

  public static double doubleArray_getitem(SWIGTYPE_p_double ary, long index) {
    return lightgbmlibJNI.doubleArray_getitem(SWIGTYPE_p_double.getCPtr(ary), index);
  }

  public static void doubleArray_setitem(SWIGTYPE_p_double ary, long index, double value) {
    lightgbmlibJNI.doubleArray_setitem(SWIGTYPE_p_double.getCPtr(ary), index, value);
  }

  public static SWIGTYPE_p_float new_floatArray(long nelements) {
    long cPtr = lightgbmlibJNI.new_floatArray(nelements);
    return (cPtr == 0) ? null : new SWIGTYPE_p_float(cPtr, false);
  }

  public static void delete_floatArray(SWIGTYPE_p_float ary) {
    lightgbmlibJNI.delete_floatArray(SWIGTYPE_p_float.getCPtr(ary));
  }

  public static float floatArray_getitem(SWIGTYPE_p_float ary, long index) {
    return lightgbmlibJNI.floatArray_getitem(SWIGTYPE_p_float.getCPtr(ary), index);
  }

  public static void floatArray_setitem(SWIGTYPE_p_float ary, long index, float value) {
    lightgbmlibJNI.floatArray_setitem(SWIGTYPE_p_float.getCPtr(ary), index, value);
  }

  public static SWIGTYPE_p_int new_intArray(long nelements) {
    long cPtr = lightgbmlibJNI.new_intArray(nelements);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static void delete_intArray(SWIGTYPE_p_int ary) {
    lightgbmlibJNI.delete_intArray(SWIGTYPE_p_int.getCPtr(ary));
  }

  public static int intArray_getitem(SWIGTYPE_p_int ary, long index) {
    return lightgbmlibJNI.intArray_getitem(SWIGTYPE_p_int.getCPtr(ary), index);
  }

  public static void intArray_setitem(SWIGTYPE_p_int ary, long index, int value) {
    lightgbmlibJNI.intArray_setitem(SWIGTYPE_p_int.getCPtr(ary), index, value);
  }

  public static SWIGTYPE_p_long new_longArray(long nelements) {
    long cPtr = lightgbmlibJNI.new_longArray(nelements);
    return (cPtr == 0) ? null : new SWIGTYPE_p_long(cPtr, false);
  }

  public static void delete_longArray(SWIGTYPE_p_long ary) {
    lightgbmlibJNI.delete_longArray(SWIGTYPE_p_long.getCPtr(ary));
  }

  public static int longArray_getitem(SWIGTYPE_p_long ary, long index) {
    return lightgbmlibJNI.longArray_getitem(SWIGTYPE_p_long.getCPtr(ary), index);
  }

  public static void longArray_setitem(SWIGTYPE_p_long ary, long index, int value) {
    lightgbmlibJNI.longArray_setitem(SWIGTYPE_p_long.getCPtr(ary), index, value);
  }

  public static SWIGTYPE_p_p_void new_voidpp() {
    long cPtr = lightgbmlibJNI.new_voidpp();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_void(cPtr, false);
  }

  public static void delete_voidpp(SWIGTYPE_p_p_void self) {
    lightgbmlibJNI.delete_voidpp(SWIGTYPE_p_p_void.getCPtr(self));
  }

  public static SWIGTYPE_p_void voidpp_value(SWIGTYPE_p_p_void self) {
    long cPtr = lightgbmlibJNI.voidpp_value(SWIGTYPE_p_p_void.getCPtr(self));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_p_void voidpp_handle() {
    long cPtr = lightgbmlibJNI.voidpp_handle();
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void StringArrayHandle_create(long num_strings, long string_size) {
    long cPtr = lightgbmlibJNI.StringArrayHandle_create(num_strings, string_size);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void StringArrayHandle_free(SWIGTYPE_p_void handle) {
    lightgbmlibJNI.StringArrayHandle_free(SWIGTYPE_p_void.getCPtr(handle));
  }

  public static String[] StringArrayHandle_get_strings(SWIGTYPE_p_void handle) {
    return lightgbmlibJNI.StringArrayHandle_get_strings(SWIGTYPE_p_void.getCPtr(handle));
  }

  public static String StringArrayHandle_get_string(SWIGTYPE_p_void handle, int index) {
    return lightgbmlibJNI.StringArrayHandle_get_string(SWIGTYPE_p_void.getCPtr(handle), index);
  }

  public static int StringArrayHandle_set_string(SWIGTYPE_p_void handle, long index, String new_content) {
    return lightgbmlibJNI.StringArrayHandle_set_string(SWIGTYPE_p_void.getCPtr(handle), index, new_content);
  }

  public static long StringArrayHandle_get_num_elements(SWIGTYPE_p_void handle) {
    return lightgbmlibJNI.StringArrayHandle_get_num_elements(SWIGTYPE_p_void.getCPtr(handle));
  }

  public static SWIGTYPE_p_void LGBM_BoosterGetEvalNamesSWIG(SWIGTYPE_p_void handle) {
    long cPtr = lightgbmlibJNI.LGBM_BoosterGetEvalNamesSWIG(SWIGTYPE_p_void.getCPtr(handle));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void LGBM_BoosterGetFeatureNamesSWIG(SWIGTYPE_p_void handle) {
    long cPtr = lightgbmlibJNI.LGBM_BoosterGetFeatureNamesSWIG(SWIGTYPE_p_void.getCPtr(handle));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

}
